// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/xescugc/chaoswall/hold (interfaces: Repository)

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	hold "github.com/xescugc/chaoswall/hold"
	reflect "reflect"
)

// HoldRepository is a mock of Repository interface
type HoldRepository struct {
	ctrl     *gomock.Controller
	recorder *HoldRepositoryMockRecorder
}

// HoldRepositoryMockRecorder is the mock recorder for HoldRepository
type HoldRepositoryMockRecorder struct {
	mock *HoldRepository
}

// NewHoldRepository creates a new mock instance
func NewHoldRepository(ctrl *gomock.Controller) *HoldRepository {
	mock := &HoldRepository{ctrl: ctrl}
	mock.recorder = &HoldRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *HoldRepository) EXPECT() *HoldRepositoryMockRecorder {
	return m.recorder
}

// Create mocks base method
func (m *HoldRepository) Create(arg0 context.Context, arg1, arg2 string, arg3 hold.Hold) (uint32, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(uint32)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create
func (mr *HoldRepositoryMockRecorder) Create(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*HoldRepository)(nil).Create), arg0, arg1, arg2, arg3)
}

// DeleteByWallCanonical mocks base method
func (m *HoldRepository) DeleteByWallCanonical(arg0 context.Context, arg1, arg2 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteByWallCanonical", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteByWallCanonical indicates an expected call of DeleteByWallCanonical
func (mr *HoldRepositoryMockRecorder) DeleteByWallCanonical(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteByWallCanonical", reflect.TypeOf((*HoldRepository)(nil).DeleteByWallCanonical), arg0, arg1, arg2)
}
